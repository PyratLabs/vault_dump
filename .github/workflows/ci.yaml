---

name: CI

'on':
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.0'

      - name: Install dependencies
        run: |
          go version
          go mod download

      - name: Run build
        run: go build .

      - name: Run vet
        run: |
          go vet .

      # Tests not yet written
      # - name: Run testing
      #  run: cd test && go test -v

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.0'

      - name: Run build
        run: make all

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            LICENSE
            build/*

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: pyratlabs
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push container image
        uses: docker/build-push-action@v2
        env:
          GITHUB_ORG: ${{ github.repository_owner }}
        with:
          context: .
          push: true
          tags: ${GITHUB_ORG,,}/vault-dump:latest,${GITHUB_ORG,,}/vault-dump:${{ steps.get_version.outputs.VERSION }}
